const productCategories = [
  "Fruit-Veg",
  "Bread",
  "Meat",
  "Dairy-Egg",
  "Condiments",
  "Juice",
  "Snacks",
  "Stationery",
];

export const generateEmail = (selectedItems, calculateCost, priceEnabled) => {
  let body = "Here is your grocery list:\\n---------------------\\n";
  let listIndex = 1;
  // Don't include a store if there aren't any selected items from that store
  let storeList = sortStores(selectedItems);
  storeList.forEach((store) => {
    body += store + ":\\n-------------------\\n";
    selectedItems.forEach((item) => {
      if (item.store == store) {
        body +=
          listIndex.toString() +
          ". " +
          (priceEnabled ? "[" + item.price.toString() + "]" : "") +
          item.name +
          " (x" +
          item.quantity +
          ")\\n";
        listIndex++;
      }
    });
    body += "\\n----------------------\\n";
  });
  body +=
    "This should cost around $" +
    Math.round(calculateCost() * 1.13 * 100) / 100 +
    " with HST\\n(Generated by the ListMaker App!)";
  return body;
};
export const generateSMS = (selectedItems, calculateCost, priceEnabled) => {
  let body = "Here is your grocery list:\n---------------------\n";
  let listIndex = 1;
  let storeList = sortStores(selectedItems);
  console.log(selectedItems);
  storeList.forEach((store) => {
    body += store + ":\n\n";

    let storeCategories = [];
    productCategories.forEach((category) => {
      let byCategory = [];
      selectedItems.forEach((item) => {
        if (item.store === store) {
          if (item.category === category || item.category === undefined) {
            byCategory.push(item);
          }
        }
      });
      if (byCategory.length !== 0) {
        storeCategories.push(byCategory);
      }
    });
    storeCategories.forEach((category) => {
      body += category[0].category + ":\n";
      category.forEach((item) => {
        body +=
          listIndex.toString() +
          ". " +
          (priceEnabled ? "[" + item.price.toString() + "]" : "") +
          item.name +
          " (x" +
          item.quantity +
          ")\n";
        listIndex++;
      });

      body += "\n";
    });

    body += "\n----------------------\n";
  });
  body +=
    "This should cost around $" +
    Math.round(calculateCost() * 1.13 * 100) / 100 +
    " with HST\n(Generated by the ListMaker App!)";
  return body;
};
export const generateWhatsApp = (
  selectedItems,
  calculateCost,
  priceEnabled
) => {
  let body = "*Here is your grocery list:*\n---------------------\n";
  let listIndex = 1;
  let storeList = sortStores(selectedItems);
  console.log(selectedItems);
  storeList.forEach((store) => {
    body += "*" + store + ":*\n\n";

    let storeCategories = [];
    productCategories.forEach((category) => {
      let byCategory = [];
      selectedItems.forEach((item) => {
        if (item.store === store) {
          if (item.category === category || item.category === undefined) {
            byCategory.push(item);
          }
        }
      });
      if (byCategory.length !== 0) {
        storeCategories.push(byCategory);
      }
    });
    storeCategories.forEach((category) => {
      body += "*" + category[0].category + ":*\n";
      category.forEach((item) => {
        body +=
          listIndex.toString() +
          ". " +
          (priceEnabled ? "```[" + item.price.toString() + "]``` " : "") +
          item.name +
          " _(x" +
          item.quantity +
          "_)\n";
        listIndex++;
      });

      body += "\n";
    });

    body += "\n----------------------\n";
  });
  body +=
    "This should cost around $" +
    Math.round(calculateCost() * 1.13 * 100) / 100 +
    " with HST\n(Generated by the ListMaker App!)";
  return body;
};
const sortStores = (selectedItems) => {
  // Get a list of all the unique stores in theselected items
  return [...new Set(selectedItems.map((item) => item.store))];
};
